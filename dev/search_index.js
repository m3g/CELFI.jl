var documenterSearchIndex = {"docs":
[{"location":"langevin/#Termostato-de-Langevin","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"","category":"section"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"En la función md-langevin.jl está implementado el control de temperatura de Langevin.","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"El termostato de Langevin consiste en la suposición de que dada partícula real del sistema está inmersa en un fluido de partículas mucho menores, que desaceleran por fricción y, al mismo tiempo, ejercen fuerzas aleatorias sobre las partículas reales. La desaceleración por fricción es proporcional a la velocidad, y los choques aleatorios causan variaciones instantáneas en las velocidades de las partículas reales. La trayectoria de una partícula real es, así, propagada modificando las fuerzas y velocidades. Las fuerzas son modificadas por la introducción de la fricción,","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"vecF(t) = -nabla Vvecx(t) - lambda vecv(t)","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"Y para que los choques aleatorios de las partículas del baño sean instantáneos (provoquen cambios instantáneos en las velocidades), una opción es introducirlos como cambios en la velocidad:","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"v(t+Delta t) = v(t) + a(t)Delta t + sqrt2lambda kT Delta tdelta(t)","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"Donde delta(t) es una variable aleatoria Gaussiana con media cero y desvío estándar 1. La relación entre el coeficiente de fricción, lambda, que desacelera las partículas, y la intensidad de los choques estocásticos, sqrt2lambda kT es resultado del teorema de fluctuación-disipación, que describe el movimiento Browniano.","category":"page"},{"location":"langevin/#.1.-Control-de-parámetros-y-termalización","page":"Termostato de Langevin","title":"6.1. Control de parámetros y termalización","text":"","category":"section"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"El coeficiente de fricción, lambda, controla el comportamiento de una dinámica de Langevin. En este caso, programa inicializa las velocidades en cero, para que el efecto del termostato sea destacado. Vamos a imprimir la trajectoria con más frequéncia para que se note el efecto de la friccion al início:","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"Por ejemplo,","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"julia> out = md_langevin(sys,Options(lambda=0.1,nsteps=20_000,iprintxyz=5))\n","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"Ejecute el programa con diversos parámetros, en particular estos:","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"lambda Delta t\n0.001 0.05\n0.01 0.05\n10. 0.05\n10. 0.001\n ","category":"page"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"En seguida de cada ejecución, observe los gráficos de energía y las trayectorias. Discuta si la temperatura llegó al valor deseado (energía cinética igual a 60 unidades), y si la energía total es en media constante. Observe el movimiento de las partículas en cada trayectoria.  La consistencia del termostato depende del paso de integración, en particular para acoplamientos grandes.  ","category":"page"},{"location":"langevin/#.2.-Código-completo-resumido","page":"Termostato de Langevin","title":"6.2. Código completo resumido","text":"","category":"section"},{"location":"langevin/","page":"Termostato de Langevin","title":"Termostato de Langevin","text":"using CELFI, Plots\nsys = System(n=100,sides=[100,100])\nminimize!(sys)\nout = md_langevin(sys,Options(lambda=0.1,nsteps=20_000,iprintxyz=1))\nplot(\n  out,ylim=[-100,100],\n  label=[\"Potential\" \"Kinetic\" \"Total\" \"Temperature\"],\n  xlabel=\"step\"\n)\nplot(out[:,4],label=\"Temperature\",xlabel=\"step\")","category":"page"},{"location":"help/#Help-entries","page":"Help entries","title":"Help entries","text":"","category":"section"},{"location":"help/","page":"Help entries","title":"Help entries","text":"Estas entradas pueden ser vistas en el REPL de Julia usando ? name. ","category":"page"},{"location":"help/","page":"Help entries","title":"Help entries","text":"Modules=[CELFI]","category":"page"},{"location":"help/#CELFI.Options","page":"Help entries","title":"CELFI.Options","text":"Structure containing the options and parameters of the simulation.\n\nExamples\n\njulia> opt = Options()\n\njulia> opt = Options(nsteps=2000)\n\n\n\n\n\n\n","category":"type"},{"location":"help/#CELFI.Point2D","page":"Help entries","title":"CELFI.Point2D","text":"Structure that contains a two-dimensional point, subtype of FieldVector from StaticArrays.\n\n\n\n\n\n","category":"type"},{"location":"help/#CELFI.Point3D","page":"Help entries","title":"CELFI.Point3D","text":"Structure that contains a three-dimensional point, subtype of FieldVector from StaticArrays.\n\n\n\n\n\n","category":"type"},{"location":"help/#CELFI.System","page":"Help entries","title":"CELFI.System","text":"Structure containing the system initial coordinates and box sides.\n\nExample\n\njulia> sys = System(n=100,sides=[100,100])\n\n\n\n\n\n\n","category":"type"},{"location":"help/#CELFI.forces!-Union{Tuple{T}, Tuple{Vector{T}, Vector{T}, System{T}, Options}} where T","page":"Help entries","title":"CELFI.forces!","text":"forces!(x::Vector{T},f::Vector{T},opt::Options) where T\n\nSubroutine that computes the force. It modifies the input f vector.\n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.image-Tuple{Any, Any}","page":"Help entries","title":"CELFI.image","text":"image(x,sides)\n\nMove coordinates to minimum perioddic image.\n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.kinetic-Tuple{Any}","page":"Help entries","title":"CELFI.kinetic","text":"Function that computes the kinetic energy.\n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.mc-Union{Tuple{System{T}}, Tuple{T}, Tuple{System{T}, Options}} where T","page":"Help entries","title":"CELFI.mc","text":"mc(sys::System{T},opt=Options=Options()) where T\n\nPeforms a Monte-Carlos simulation.\n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.md-Union{Tuple{System{T}}, Tuple{T}, Tuple{System{T}, Options}} where T","page":"Help entries","title":"CELFI.md","text":"md(sys,opt) where T\n\nPerforms a simple MD simulation.\n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.md_berendsen-Union{Tuple{System{T}}, Tuple{T}, Tuple{System{T}, Options}} where T","page":"Help entries","title":"CELFI.md_berendsen","text":"md_berendsen(sys::System{T},opt::Options) where T\n\nPerforms a MD simulation with a Berendsen bath. \n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.md_isokinetic-Union{Tuple{System{T}}, Tuple{T}, Tuple{System{T}, Options}} where T","page":"Help entries","title":"CELFI.md_isokinetic","text":"md_isokinetic(sys::System{T},opt::Options) where T\n\nPerforms a MD simulation with an isokinetic bath. \n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.md_langevin-Union{Tuple{System{T}}, Tuple{T}, Tuple{System{T}, Options}} where T","page":"Help entries","title":"CELFI.md_langevin","text":"md_langevin(sys::System{T},opt::Options) where T\n\nPerforms a MD simulation with a Langevin bath. \n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.minimize!-Union{Tuple{System{T}}, Tuple{T}, Tuple{System{T}, Options}} where T","page":"Help entries","title":"CELFI.minimize!","text":"minimize!(sys::System{T},opt::Options)\n\nMinimizes the potential energy of sys.x0. Modifies sys.x0.\n\nExample\n\njulia> sys = System(n=100,sides=[100,100])\n\njulia> minimize!(sys,Options(tol=1e-3))\nEnergy before minimization: 38322.72337856496\nEnergy after minimization: -74.15646912098042\n\n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.potential-Union{Tuple{T}, Tuple{Vector{T}, System{T}, Options}} where T","page":"Help entries","title":"CELFI.potential","text":"Function that computes the potential energy\n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.printxyz-NTuple{4, Any}","page":"Help entries","title":"CELFI.printxyz","text":"printxyz(time,x,sys,buffer)\n\nSubroutine that writes the current coordinates to an output file, previously opened as buffer.\n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.printxyz-Tuple{Any, Any, String}","page":"Help entries","title":"CELFI.printxyz","text":"printxyz(x,sys,file::String) \n\nPrints one set of coordinates, given in x to file file. Overwrites the file.  \n\n\n\n\n\n","category":"method"},{"location":"help/#CELFI.velocities-Union{Tuple{T}, Tuple{System{T}, Options}} where T","page":"Help entries","title":"CELFI.velocities","text":"velocities(sys::System{T},opt::Options) where T\n\nInitialize velocities\n\n\n\n\n\n","category":"method"},{"location":"sistema/#Sistema-simulado","page":"Sistema simulado","title":"Sistema simulado","text":"","category":"section"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"La simulación es de un fluido de 100 partículas (mono-atómicas) que interactúan por un potencial de Lennard-Jones, en un sistema bi-dimensional, periódico.","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"V = 4epsilon left( fracsigma^12r^12 - fracsigma^6r^6 right)","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Abra el archivo potential.jl y entienda la implementación del cálculo de la energía potencial. Note que el cálculo depende de 3 parámetros: epsilon, sigma, y el tamaño del sistema periódico. Los parámetros están definidos en la estructura de datos opt, de entrada (veremos más tarde como usarla). ","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"El archivo forces.jl contiene el cálculo de las fuerzas (el gradiente del potencial), y el archivo kinetic.jl contiene el cálculo de la energía cinética. Como el sistema usa condiciones periódicas de contorno, las coordenadas tienen que siempre ser calculadas en relación a la imagen mínima. El cálculo de la imagen mínima está implementado en el archivo image.jl. Es interesante entender la implementación de cada una de estas funciones, que son comunes a todos los métodos que vamos a describir. ","category":"page"},{"location":"sistema/#.1.-Coordenadas-iniciales","page":"Sistema simulado","title":"2.1. Coordenadas iniciales","text":"","category":"section"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Para inciar los trabajos, abra una sección de Julia, y dé el comando:","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"julia> using CELFI","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"El sistema inicial puede ser creado aleatoriamente, usando: ","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"julia> sys = System(n=100,sides=[100,100]) \nSystem{Point2D}:\n Number of particles = 100\n Box sides = [100.0, 100.0]\n","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"que genera 100 puntos en 2 dimensiones, aleatórios, con coordenadas entre [-50,-50] y [50,50], en este caso. Point2D es un tipo de variable que representa un punto en dos dimensiones. Mas adelante vamos a ver que todo el código es genérico, y podemos hacer simulaciones en 3 dimensiones apenas modificando el tipo de variable asociado. ","category":"page"},{"location":"sistema/#.1.-Parámetros-y-opciones-de-la-simulación","page":"Sistema simulado","title":"2.1. Parámetros y opciones de la simulación","text":"","category":"section"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Los parámetros de las simulaciones son controlados en la estructura Options, por ejemplo, para ajuster el paso de tiempo, pasamos el parámetro dt a la estructura. Esto puede ser echo en la llamada de las funciones de simulacion, como veremos.","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"julia> Options(dt=0.1)\nOptions\n  dt: Float64 0.1\n  nsteps: Int64 2000\n  eps: Float64 1.0\n  sig: Float64 2.0\n  kavg_target: Float64 0.6\n  ibath: Int64 20\n  iequil: Int64 200\n  tau: Int64 200\n  printxyz: Bool true\n  iprintxyz: Int64 200\n  iprint: Int64 200\n  minprint: Bool false\n  trajectory_file: String \"traj.xyz\"\n","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"En este caso, ajustamos el paso de tiempo manualmente, y mantuvimos todas las otras opciones con valores default. Cada uno de estos parámetros será discutido oportunamente. Note que definen el tamaño, campo de fuerza (epsilon y sigma), energía cinética objetivo (temperatura), y los nombres de los archivos de salida. ","category":"page"},{"location":"sistema/#.3.-Minimización-de-la-energia","page":"Sistema simulado","title":"2.3. Minimización de la energia","text":"","category":"section"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"En seguida, el punto inicial va a ser modificado usando  el Método del Gradiente para minimizar la energía. El método consiste en mover las partículas según la aproximación de Taylor de orden uno, en la dirección de descenso de energía:","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"vecx_i+1 = vecx_i - nabla V(vecx_i) Delta x","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Si la energía en el punto vecx_i+1 es menor que la energía en el punto vecx_i, se acepta el punto vecx_i+1 y el proceso es repetido. Si no, Delta x es disminuido (Delta x = Delta x  2), y un nuevo punto vecx_i+1 es calculado. Como la aproximación debe ser una buena aproximación en las cercanias del punto corriente (vecx_i), un gradiente negativo garante que la función disminuye para Delta x suficientemente pequeño. El proceso es interrumpido cuando la norma del gradiente es pequeña, o cuando demasiados puntos fueron testados. En mecánica, -nabla V = vecF, entonces la función que calcula el gradiente es la misma que calcula las fuerzas en la simulación. Abra el archivo minimize.jl para discutir como se crea el punto inicial. ","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Antes de ejecutar la minimización de energia, vamos a copiar el punto inicial, para comparación:","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"julia> x0 = copy(sys.x0)","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"En seguida, minimizamos la energia con la función minimize!:","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"julia> minimize!(sys)\nEnergy before minimization: 38322.72337856496\nEnergy after minimization: -74.15646912098042","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"note: Note\nEn Julia es una convención que las funciones que modifican sus argumentos terminan en !. En este caso, la función va a modificar las posiciones, sys.x0, de las partículas. ","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Si desea ver la progression de las energias, active la opcion minprint, con minimize!(sys,Options(minprint=true)).","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Podemos ver rapidamente que ocurrió con las particulas, colocando-las en un gráfico. Primero, generamos un gráfico de los puntos antes de la minimización:","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"julia> using Plots\n\njulia> scatter(Tuple.(x0))","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Los puntos deben estar aleatoriamente distribuídos, y en particular algunos puntos deben estar muy cercanos a los otros, lo que genera potenciales muy repulsivos.","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"En seguida, hacemos el gráfico del punto con energia mínima obtenido:","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"julia> scatter(Tuple.(sys.x0))","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"y notará que los puntos ahora tienen una nueva disposición: hay puntos formando clusteres, porque el potencial de Lennard-Jones es atractivo en distáncias largas. Pero no hay más puntos muy cercanos generando repulsiones muy grandes.","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Este punto inicial de energia mínima será usado en nuestras simulaciones. ","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"note: Note\nLos gráficos puden ser salvos como figuras con savefig(\"plot.pdf\"), por ejemplo.","category":"page"},{"location":"sistema/#.4.-Temperatura","page":"Sistema simulado","title":"2.4. Temperatura","text":"","category":"section"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"La temperatura del sistema es un parámetro también definido internamente en el programa (puede ser modificado a gusto, pero no lo haremos). La temperatura se define a partir energía cinética media asociada a cada grado de libertad de movimiento del sistema. En el caso que todos los movimientos pueden ser escritos como translaciones, la definición es","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"frac12kT = left frac12 m v_x^2right","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"donde la media, hecha sobre v_x aqui, es equivalente si hecha sobre cualquier otro grado de libertad de translación. En un sistema tridimensional, por lo tanto, ","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"leftfrac12m vecv^2 right = \nleftfrac12m left(v_x^2 + v_y^2 + v_z^2right) right = \n3left frac12 m v_x^2 right = frac32kT","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"que es el resultado usual.","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Nuestras simulaciones son de un sistema bi-dimensional. En este caso,","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"left frac12m vecv^2 right = \nleft frac12m left(v_x^2 + v_y^2right)right =\n2left frac12m v_x^2 right = kT","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"En los códigos de dinámica molecular, la definición de temperatura se da, así, por la definición de la energía cinética media o, en este caso, por kT. En el código de Monte-Carlo la definición de temperatura se da por la tasa de aceptación, con la misma definición. ","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"En todos los códigos fue escogido que se objetiva simular el sistema a la temperatura que corresponde a kT = 06 unidades. Los sistemas simulados tiene 100 partículas, por lo tanto la energía cinética media es 100kT=60 unidades. Las velocidades iniciales van a ser generadas aleatoriamente al princípio de la simulación. ","category":"page"},{"location":"sistema/#.5.-Código-completo-resumido","page":"Sistema simulado","title":"2.5. Código completo resumido","text":"","category":"section"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"using CELFI, Plots\nsys = System(n=100,sides=[100,100])\nx0 = copy(sys.x0)\nminimize!(sys)\nscatter(Tuple.(x0))\nscatter(Tuple.(sys.x0))","category":"page"},{"location":"sistema/","page":"Sistema simulado","title":"Sistema simulado","text":"Observación: el comando Tuple.(x) convierte el vector de vectores en un vector de pares (tuplas), que es correctamente interpretado por Plots como una única série de puntos.","category":"page"},{"location":"md_vs_mc/#Comparación-entre-MC-y-MD","page":"Comparando MD y MC","title":"Comparación entre MC y MD","text":"","category":"section"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"Ejecute, nuevamente, el programa {\\tt bin/md-langevin} con los parámetros lambda=001 y Delta t=005. Observe el gráfico de energías. Compare la energía {\\it potencial} de este gráfico con la energía potencial de la simulación de Monte-Carlo.","category":"page"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"\\subsubsection{Cálculo de la estructura}","category":"page"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"Vamos a comparar la estructura media obtenida usando MD con la estructura media obtenida con MC. Para eso vamos a usar la función g(r), que se llama ``función de distribución radial''.  Esta función mide la probabilidad de encontrar una partícula a una distancia r de otra partícula en el sistema real, en relación a esa misma probabilidad si no hubiese ninguna interacción entre las partículas. ","category":"page"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"En nuestro caso bi-dimensional, el número de partículas por unidad de volumen es rho=nA, donde n=100 es el número de partículas y A=100^2 es el área total del sistema simulado. El número de partículas esperado en un intervalo de distancias entre r y r+Delta r de cada partícula es, por lo tanto n(r)=rho A(r), donde A(r) es el área de una cáscara circular de radio menor r y radio mayor r+Delta r: \\begin{center} \\includegraphics[width=6cm]{./area.pdf} \\end{center} Vemos que A(r)=pi (r+Delta r)^2 - pi r^2 approx 2pi rDelta r. De este modo, el número de partículas esperado, en media, seria de  n(r)=2pi rDelta rrho, si no hubiese interacciones. ","category":"page"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"Las interacciones hacen con que el número de partículas en cada distancia sea diferente de una distribución homogénea. Si hay interacciones favorables, por ejemplo, la probabilidad de encontrar dos partículas próximas es mayor. Esta distribución de partículas es uno de los parámetros estructurales más importantes.","category":"page"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"El programa {\\tt bin/gr} calcula, a partir de la trayectoria, la función g(r)=n(r)n(r), done n(r) esta definido anteriormente, y n(r) es el número medio de partículas efectivamente observado entre r y r+Delta r en la simulación. ","category":"page"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"Haga una simulación de dinámica molecular con el termostato de Langevin, ahora por más tiempo,  usando el comando  \\command{./bin/md-langevin 15000} Use los parámetros lambda=001 y Delta t=005. Observe la trayectoria resultante y calcule al función g(r) simplemente ejecutando el programa {\\tt bin/gr}. En seguida, visualice el g(r) con \\command{xmgrace gr.dat}  Mantenga este gráfico abierto, para comparación futura. Entienda que significa, en función de la visualización de la simulación. ","category":"page"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"En seguida, haga una simulación de 200.000 pasos de Monte-Carlo con el programa  {\\tt bin/mc} usando una perturbación de 0.05~\\AA. Observe la trayectoria generada. Ejecute nuevamente el programa {\\tt bin/gr} para obtener la g(r) de esta simulación de Monte-Carlo. Incorpore los datos al mismo gráfico del g(r) obtenido por dinámica molecular. Compare. Las simulaciones, con sus naturalezas totalmente distintas, muestrearon las mismas estructuras?  ","category":"page"},{"location":"md_vs_mc/","page":"Comparando MD y MC","title":"Comparando MD y MC","text":"\\end{document}","category":"page"},{"location":"isokinetic/#Control-de-temperatura-isocinético","page":"Termostato isocinético","title":"Control de temperatura isocinético","text":"","category":"section"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"La función implementada en md-isokinetic.jl implementa el control de temperatura isocinético. En este método, las velocidades son escalonadas por un parámetro lambda = sqrtT_0T a intervalos regulares, para termostatizar el sistema a la temperatura T_0.  Su ejecución demanda la definición de dos parámetros adicionales: el intervalo de tiempo entre dos escalonamientos de velocidades, y el tiempo de equilibración. El tiempo de equilibración es el tiempo dentro del cual los escalonamientos son realizados. El objetivo debe ser obtener una simulación estable, con energía cinética media adecuada a la deseada (60 unidades), después de la equilibración.","category":"page"},{"location":"isokinetic/#.1.-Control-de-parámetros-y-termalización","page":"Termostato isocinético","title":"4.1. Control de parámetros y termalización","text":"","category":"section"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"El sistema es inicializado de la misma forma que antes, esto es:","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"julia> using CELFI, Plots\n\njulia> sys = System(n=100,sides=[100,100]) \n\njulia> minimize!(sys);","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"En seguida, vamos a ejecutar la simulación, ahora con termostato isocinético, por 2000 pasos, de los cuales 200 son de equilibración. El termostato es aplicado a cada ibath pasos:","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"julia> out = md_isokinetic(sys,Options(iequil=200,nsteps=2_000,ibath=1))","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"El gráfico de las energias en función del tiempo puede ser obtenido con:","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"julia> plot(out,ylim=[-100,100],\n         label=[\"Potential\" \"Kinetic\" \"Total\" \"Temperature\"],\n         xlabel=\"step\"\n       )\n","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"Debe notar-se que la energia total no es más constante dureante el periódo de equilibración. Las energia potencial y cinética deben haber convergido un poco mejor que en la simulación sin control de temperatura, aunque esta primera simulación es muy corta. ","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"La temperatura puede ser observada con:","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"julia> plot(\n         out[:,4],\n         label=[\"Temperature\"],\n         xlabel=\"step\"\n       )","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"Note que se mantiene practicamente constante e igual a la temperatura objetivo (0.60) durante la equilibración, pero después divergéncias pueden ser observadas. Si el sistema no está equilibrado, estas divergéncias pueden ser sistemáticas. ","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"Pruebe diferentes parámetros, y entienda el efecto del tiempo de equilibración y de la frequéncia de equilibración sobre la temperatura. ","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"Una buena condición para visualizar los resultados se obtiene con ibath=50  y iequil=5_000, para nsteps=20_000. ","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"julia> out = md_isokinetic(sys,Options(iequil=5_000,ibath=50,nsteps=20_000))","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"En estas condiciones, normalmente, no se debe observar un desvio sistemático de las energias o de la temperatura después de la equilibración. Repita los gráficos (en el prompt de Julia, la flecha para arriba accede a los comandos anteriores).","category":"page"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"La trajectoria, traj.xyz, puede ser vista con VMD, como explicado anteriormente. ","category":"page"},{"location":"isokinetic/#.2.-Código-completo-resumido","page":"Termostato isocinético","title":"4.2. Código completo resumido","text":"","category":"section"},{"location":"isokinetic/","page":"Termostato isocinético","title":"Termostato isocinético","text":"using CELFI, Plots\nsys = System(n=100,sides=[100,100])\nminimize!(sys)\nout = md_isokinetic(sys,Options(iequil=5_000,ibath=50,nsteps=20_000))\nplot(\n  out,ylim=[-100,100],\n  label=[\"Potential\" \"Kinetic\" \"Total\" \"Temperature\"],\n  xlabel=\"step\"\n)\nplot(out[:,4],label=\"Temperature\",xlabel=\"step\")","category":"page"},{"location":"berendsen/#Control-de-temperatura-de-Berendsen","page":"Termostato de Berendsen","title":"Control de temperatura de Berendsen","text":"","category":"section"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"En la función md-berendsen.jl está implementado el control de temperatura de Berendsen. Este método también es un método basado en el escalonamiento de velocidades, pero es más suave. Las velocidades son escalonadas por","category":"page"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"lambda = left  \n1 + fracDelta ttau left(\nfracT_0T(t) -1\nright)\nright^12","category":"page"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"donde Delta t es el paso de integración y tau es un parámetro que define la velocidad con que el escalonamiento es realizado. El escalonamiento es más suave y más lento. ","category":"page"},{"location":"berendsen/#.1.-Control-de-parámetros-y-termalización","page":"Termostato de Berendsen","title":"5.1. Control de parámetros y termalización","text":"","category":"section"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"El parámetro tau se ajusta con la opcion tau de Options. Por ejemplo:","category":"page"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"julia> out = md_berendsen(sys,Options(tau=50,iequil=500,nsteps=20_000))\n","category":"page"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"Pruebe diferentes parámetros, con 20_000 pasos de simulación. Entre los cuales, estos: ","category":"page"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"tau i_mathrmequil\n50 500\n50 1500\n300 1500\n300 3000\n ","category":"page"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"Observe los gráficos de energía resultantes, usando los mismos comandos de antes:","category":"page"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"julia> using Plots\n\njulia> plot(\n         out,ylim=[-100,100],\n         label=[\"Potential\" \"Kinetic\" \"Total\" \"Temperature\"],\n         xlabel=\"step\"\n       )","category":"page"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"Observe la suavidad, o no, de la curva de energía total. Observe si la energía cinética se aproximó de la energía media deseada (kT=60).","category":"page"},{"location":"berendsen/#.2.-Código-completo-resumido","page":"Termostato de Berendsen","title":"5.2. Código completo resumido","text":"","category":"section"},{"location":"berendsen/","page":"Termostato de Berendsen","title":"Termostato de Berendsen","text":"using CELFI, Plots\nsys = System(n=100,sides=[100,100])\nminimize!(sys)\nout = md_berendsen(sys,Options(tau=50,iequil=500,nsteps=20_000))\nplot(\n  out,ylim=[-100,100],\n  label=[\"Potential\" \"Kinetic\" \"Total\" \"Temperature\"],\n  xlabel=\"step\"\n)\nplot(out[:,4],label=\"Temperature\",xlabel=\"step\")","category":"page"},{"location":"#Fundamentos-de-Mecánica-Estadística-y-Simulaciones","page":"Início","title":"Fundamentos de Mecánica Estadística y Simulaciones","text":"","category":"section"},{"location":"","page":"Início","title":"Início","text":"<center>\nLeandro Martínez\n<br>\n<i>Instituto de Quimica, Universidad de Campinas</i>\n<br>\n<a href=http://m3g.iqm.unicamp.br>http://m3g.iqm.unicamp.br</a>\n<br>\n<br>\n</center>","category":"page"},{"location":"","page":"Início","title":"Início","text":"Este tutorial contiene las explicaciones para rodar y analizar simulaciones de Dinámica Molecular y Mote-Carlo de un sistema bi-dimensional simple. El objetivo es que el estudiante entre en contacto con diversos detalles técnicos involucrados en la realización de simulaciones y sus limitaciones. ","category":"page"},{"location":"#.1.-Instalación-de-CELFI.jl","page":"Início","title":"1.1. Instalación de CELFI.jl","text":"","category":"section"},{"location":"","page":"Início","title":"Início","text":"Instale el interpretador de Julia, de https://julialang.org/.","category":"page"},{"location":"","page":"Início","title":"Início","text":"Ejecute el interpretador, e instale el paquete deste curso, usando: ","category":"page"},{"location":"","page":"Início","title":"Início","text":"julia> ] add https://github.com/m3g/CELFI.jl","category":"page"},{"location":"","page":"Início","title":"Início","text":"(el ] te llevará al prompt the gerenciamento de paquetes, \"(@v1.6) pkg>\", donde debe ser ejecutado el add ...)","category":"page"},{"location":"","page":"Início","title":"Início","text":"Instale también el paquete Plots, que va a ser usado para graficar algunos resultados:","category":"page"},{"location":"","page":"Início","title":"Início","text":"julia> ] add Plots","category":"page"},{"location":"#.2.-Instalación-de-VMD","page":"Início","title":"1.2. Instalación de VMD","text":"","category":"section"},{"location":"","page":"Início","title":"Início","text":"Usaremos VMD para visualización de las trajectories. Certifique-se de tenerlo instalado también.","category":"page"},{"location":"#.3.-Códigos","page":"Início","title":"1.3. Códigos","text":"","category":"section"},{"location":"","page":"Início","title":"Início","text":"Julia es un lenguage de programación de alta peformance, dinámico, y con sintaxis bastante simple. Todos los códigos de este curso están disponíbles en repositório  https://github.com/m3g/CELFI.jl, y su lectura será estimulada en la medida que avanzemos en la ejecución del tutorial. ","category":"page"},{"location":"","page":"Início","title":"Início","text":"Los códigos aqui son razonablemente eficientes para al realización del tutorial, pero no están optimizados para máxima peformance, para que su lectura sea más fácil. ","category":"page"},{"location":"#.4.-Código-completo-resumido","page":"Início","title":"1.4. Código completo resumido","text":"","category":"section"},{"location":"","page":"Início","title":"Início","text":"Los paquetes pueden ser instalados desde un script, con:","category":"page"},{"location":"","page":"Início","title":"Início","text":"import Pkg\nPkg.add(\"https://github.com/m3g/CELFI.jl\")\nPkg.add(\"Plots\")","category":"page"},{"location":"montecarlo/#Simulaciones-de-Monte-Carlo","page":"Monte-Carlo","title":"Simulaciones de Monte-Carlo","text":"","category":"section"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"En la función mc.jl está implementado el método de Monte-Carlo.","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Las simulaciones de Monte-Carlo tienen un principio totalmente distinto de las simulaciones de dinámica, pero se supone que muestrean el mismo conjunto de configuraciones si las condiciones termodinámicas son las mismas. Aquí realizaremos una simulación de Monte-Carlo y verificaremos que similaridad poseen en relación a las simulaciones de dinámica molecular. ","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Al contrario de MD, MC no tiene tiempo. Hay una generación de posiciones aleatorias consecutivas, que son aceptadas o no de acuerdo con el criterio de Metropolis,","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Si V(vecx_j) leqslant V(vecx_i), entonces P(ito j) = 1 ","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Si V(vecx_j)  V(vecx_i), entonces P(ito j) = e^-(V_j-V_i)kT","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"El segundo criterio es, numéricamente, satisfecho comparando el resultado de e^-(V_j-V_i)kT con el sorteo de un número aleatorio entre 0 y 1. En nuestros ejemplos, kT=06.","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Este procedimiento genera una secuencia de configuraciones, que en la práctica tiene correlación porque las nuevas configuraciones son generalmente generadas por perturbaciones de las configuraciones anteriores. Las perturbaciones tiene que ser escogidas para minimizar la correlación, al mismo tiempo que la tasa de aceptación sea razonable. Tasas de aceptación del orden de 20 a 30\\% son consideradas ideales. ","category":"page"},{"location":"montecarlo/#.1.-Ejecución","page":"Monte-Carlo","title":"7.1. Ejecución","text":"","category":"section"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Ejecute la funcion mc. Vamos a variar la magnitud de las perturbaciones. Las perturbaciones de las posiciones son Gaussianas, y la magnitud de entrada es el desvío estándar. El número de pasos corresponde al número de nuevas estructuras, no necesariamente aceptadas, generadas:","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"julia> out = mc(sys,Options(alpha=0.05,nsteps=50_000))","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Para un número de pasos de 50.000, pruebe diferentes perturbaciones, hasta que al fin una tasa de aceptación de al rededor de 30\\% sea obtenida. (Algo próximo a 008textrmAA). ","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Una vez elegida la perturbación, ejecute el programa con número de pasos de 200.000, lo que implica que aproximadamente 60.000 pasos van a ser aceptados (para una tasa de 30\\%). ","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Observe la evolución de la energía potencial, haciendo gráficos con: ","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"plot(out,ylim=[-100,100], label=\"Potential\", xlabel=\"step\")","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"En este caso no tiene sentido mostrar la energia cinética, que no está definida ya que las partículas no tienen efectivamente velocidades. Salve el gráfico en un archivo pdf, para comparación posterior, usando: ","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"julai> savefig(\"./mc.pdf\")","category":"page"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"Observe la trayectoria (con los mismos comandos de antes). ","category":"page"},{"location":"montecarlo/#.2.-Código-completo-resumido","page":"Monte-Carlo","title":"7.2. Código completo resumido","text":"","category":"section"},{"location":"montecarlo/","page":"Monte-Carlo","title":"Monte-Carlo","text":"using CELFI, Plots\nsys = System(n=100,sides=[100,100])\nminimize!(sys)\nout = mc(sys,Options(alpha=0.05,nsteps=50_000))\nplot(out,ylim=[-100,100], label=\"Potential\", xlabel=\"step\")","category":"page"},{"location":"simple/#Simulación-de-Dinámica-Molecular-Microcanónica","page":"Simulación microcanónica","title":"Simulación de Dinámica Molecular Microcanónica","text":"","category":"section"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Abra el archivo md-simple.jl, que contiene el algoritmo de simulación. La simulación empieza con velocidades aleatorias, ajustadas para la media termodinámica deseada de 0.6 unidades/átomo. A esta energía cinética media le llamaremos ``temperatura''. El algoritmo de integración es Velocity-Verlet, que consiste en propagar la posiciones con","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"vecx(t+Delta t) = vecx(t) + vecv(t)Delta t + frac12veca(t)Delta t^2","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"siendo veca(t)=vecF(t)m, donde vecF(t) es la fuerza en el tiempo corriente.  La fuerza en seguida es calculada en un tiempo posterior de tiempo con","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"vecF(t+Delta t) = -nabla Vleftvecx(t)right","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"y entonces las velocidades en el instante siguiente son calculadas con","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"vecv(t+Delta t) = vecv(t) +\nfrac12left\nfracvecF(t)m+fracvecF(t+Delta t)mright","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"completando el ciclo. En este ejemplo las masas son consideradas unitarias, para simplificar. La simulación es ejecutada por nsteps pasos, con paso de integración Delta t, este siendo un parámetro de entrada, dt, definido en Options. ","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"La simulación no tiene control de temperatura o de presión. Es una propagación de la trajectória según las leyes de Newton, que deberían conservar la energia. A esto se le llama una simulación \"microcanónica\", o \"NVE\" (que conserva, en princípio, el número de partículas, el volumen y la energia total).","category":"page"},{"location":"simple/#.1.-Paso-de-integración","page":"Simulación microcanónica","title":"3.1. Paso de integración","text":"","category":"section"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Para realizar una MD simple, con un paso de integración de dt=1.0, ejecute le comando:","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"julia> out = md(sys,Options(dt=0.1))\n","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"En princípio, está previso realizar 2000 pasos de integración de las equaciones  de movimimiento.  Pruebe pasos de integración entre 1.0 y 0.01.  Note que pasa con la energía. Note que pasa con la energía cinética media, la cual fue inicializada en 0.6 unidades/átomo. Discuta la elección del paso de integración, y los valores de energía cinética obtenidos. Las simulaciones que siguen van a usar un paso de integración dt = 0.05.","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Es posible controlar la frequéncia de impresión y el número de puntos salvos en el archivo de trajectoria con las opciones iprint y iprintxyz:","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"julia> out = md(sys,Options(dt=0.1,iprint=1,iprintxyz=5))","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"El número total de pasos se controla con el parámetro nsteps.","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"La variable out que sale de la simulación es una matriz con las energias y la temperatura en cada paso de la simulación. Es probable que la simulación \"explote\" con pasos de tiempo grandes. Para visualizar este processo, podemos hacer:","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"julia> using Plots\n\njulia> plot(\n         out,ylim=[-100,100],\n         label=[\"Potential\" \"Kinetic\" \"Total\" \"Temperature\"],\n         xlabel=\"step\"\n       )","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Y obtendremos un gráfico similar a:","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"<center> \n<img src=\"../figures/exploded.png\">\n</center>","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Para pasos de tiempo menores la simulación debe conseguir llegar hasta el fin. Podemos ver el resultado nuevamente, y debe ser algo similar a: ","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"<center> \n<img src=\"../figures/not_exploded.png\">\n</center>","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Observe y trate de entender las amplitudes de las oscilaciones de las energías cinética y potencial, y las amplitudes de las oscilaciones de la energía total. A que se deben cada una de las oscilaciones? Observe como estas oscilaciones dependen del paso de integración.","category":"page"},{"location":"simple/#.2.-Visualización-de-la-trajectoria","page":"Simulación microcanónica","title":"3.2. Visualización de la trajectoria","text":"","category":"section"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Por fin, abra la trayectoria usando VMD. No es necesário salir de la sección de Julia. Al apretar ; (punto y coma) aparecerá un prompt shell>, desde el cual  es posible ejecutar a VMD, si este está instalado correctamente y disponible en el path:","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"shell> vmd traj.xyz","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Dentro de VMD, elija la representación de VDW, en ","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Graphics -> Representations -> Drawing Method -> VDW","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"y dé el comando ","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"vmd> pbc set { 100. 100. 100. } -all","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"para indicar la periodicidad del sistema.  Para representar explícitamente el sistema periódico, elija +X;+Y;-X;-Y en","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Graphics -> Representations -> Periodic","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Para salir de VMD use el comando exit, y para volver al prompt de Julia desde shell>, use backspace. ","category":"page"},{"location":"simple/#.3.-Código-completo-resumido","page":"Simulación microcanónica","title":"3.3. Código completo resumido","text":"","category":"section"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"using CELFI, Plots\n\nsys = System(n=100)\nminimize!(sys)\nout = md(sys,Options(dt=0.05))\n\nplot(out,ylim=[-100,100],\n  label=[\"Potential\" \"Kinetic\" \"Total\" \"Temperature\"],\n  xlabel=\"step\"\n)","category":"page"},{"location":"simple/","page":"Simulación microcanónica","title":"Simulación microcanónica","text":"Es generado el archivo traj.xyz que puede ser visualizado en VMD. ","category":"page"}]
}
